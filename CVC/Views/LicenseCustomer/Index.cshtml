
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<head>
    @*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@
    @* <script src="~/Scripts/bootstrap.min.js"></script>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
    <link href="~/Content/css/style.css" rel="stylesheet" />
    @*<link href="~/Content/css/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
        <script src="~/Scripts/DataTable/jquery.dataTables.min.js"></script>*@
    <script src="~/Scripts/underscore-min.js"></script>
</head>
<body>
    @Html.AntiForgeryToken()
    <div class="container-fluid wrapper">

        <div class="card">
            <h3 class="title">Customer Form</h3>
            <h4 class="sub-title">Manage Customer</h4>
            <button id="ID_Btn_Add_Company" type="button" class="btn btn-big mb-2">Add New Company</button>
            @*<button id="ID_Btn_Refresh" type="button" class="btn btn-big mb-2">Refresh</button>*@
            <div class="table-wrap" id="ID_Div_DataTable_Companies">
            </div>
        </div>
        <div id="ID_Div_New_Customer" style="display:none" class="tab-div">
            <div class="btn-wrap">
                <button id="ID_Btn_Company_Cancel" type="submit" class="btn btn-info mb-2">Cancel Company</button> @* <button id="ID_Btn_Company_Clear" type="submit" class="btn btn-info mb-2">Clear</button> *@
                <button id="ID_Btn_Company_Save" type="submit" class="btn btn-info mb-2">Save Company</button>
                <button id="ID_Btn_Company_Update" type="submit" class="btn btn-info mb-2">Update Company</button>
            </div>
            <!-- Nav tabs -->
            <ul class="nav nav-tabs tab-btn">
                <li class="nav-item active">
                    <a class="nav-link" data-toggle="tab" href="#tab1">Company</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#tab2">Customer</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content tab-div">
                <div id="tab1" class="tab-pane active">
                    <div class="card">
                        <h4 class="sub-title">Part 1 (Main Company)</h4>
                        <form class="form-inline">
                            <div class="input-group mb-6 mr-sm-6">
                                <div class="input-group-text">Company Code</div>
                                <input id="ID_Txt_Company_Code" type="text" class="form-control" disabled>
                            </div>
                            <div class="input-group mb-6 mr-sm-6">
                                <div class="input-group-text">
                                    <sup style="color: red;" title="this field is required">*</sup>
                                    Company Name
                                </div>
                                <input id="ID_Txt_Company_Name" type="text" class="form-control">
                            </div>
                            <div class="input-group mb-6 mr-sm-6">
                                <div class="input-group-text">
                                    <sup style="color: red;" title="this field is required">*</sup>
                                    Location
                                </div>
                                <select id="ID_Drp_Company_Location" class="custom-select form-control"></select>
                            </div>
                            <div class="input-group mb-6 mr-sm-6">
                                <div class="input-group-text">
                                    <sup style="color: red;" title="this field is required">*</sup>
                                    Address Type
                                </div>
                                <select id="ID_Drp_Company_Address_Type" class="custom-select form-control" disabled></select>
                            </div>
                            <div class="input-group mb-12 mr-sm-12 w-100">
                                <div class="input-group-text">
                                    <sup style="color: red;" title="this field is required">*</sup>
                                    Address
                                </div>
                                <textarea id="ID_Txt_Company_Address" type="text" class="form-control"></textarea>
                            </div>
                        </form>
                        <div class="mb-0">
                            <div class="btn-wrap">
                                <button id="ID_Btn_Add_Company_Contact_New" type="submit" class="btn btn-info mb-2">
                                    Add
                                    a Contact
                                </button>
                            </div>
                            <div id="ID_Div_Company_Contact" style="display: none;">
                                <h4 class="sub-title title-align">Part 3 (New Contact)</h4>
                                <div class="btn-wrap">
                                    <button id="ID_Btn_Company_Contact_Cancel" type="submit" class="btn btn-info mb-2">
                                        Cancel Contact
                                    </button>
                                    <button id="ID_Btn_Company_Contact_Update" type="submit" class="btn btn-info mb-2">
                                        Update Contact
                                    </button>
                                    <button id="ID_Btn_Company_Contact_Add" type="submit" class="btn btn-info mb-2">
                                        Add Contact
                                    </button>
                                </div>
                                <form class="form-inline">
                                    <div class="input-group mb-6 mr-sm-6">
                                        <div class="input-group-text">
                                            <sup style="color: red;" title="this field is required">*</sup>
                                            Contact Name
                                        </div>
                                        <input id="ID_Txt_Company_Contact_Name" type="text" class="form-control">
                                    </div>
                                    <div class="input-group mb-6 mr-sm-6">
                                        <div class="input-group-text">
                                            <sup style="color: red;" title="this field is required">*</sup>
                                            Mobile Number
                                        </div>
                                        <input id="ID_Txt_Company_Contact_Mob" type="text" class="form-control">
                                    </div>
                                    <div class="input-group mb-6 mr-sm-6">
                                        <div class="input-group-text">
                                            <sup style="color: red;" title="this field is required">*</sup>
                                            Email ID
                                        </div>
                                        <input id="ID_Txt_Company_Contact_Email" type="email" class="form-control">
                                    </div>
                                    <div class="input-group mb-6 mr-sm-6">
                                        <div class="input-group-text">
                                            <sup style="color: red;" title="this field is required">*</sup>
                                            Designation
                                        </div>
                                        <input id="ID_Txt_Company_Contact_Desg" type="text" class="form-control">
                                    </div>
                                    <div class="input-group mb-12 mr-sm-12 w-100">
                                        <div class="input-group-text">
                                            <sup style="color: red;" title="this field is required">*</sup>
                                            Description
                                        </div>
                                        <textarea id="ID_Txt_Company_Contact_Desc" type="text" class="form-control"></textarea>
                                    </div>
                                    <div class="input-group mb-6 mr-sm-6">
                                        <div class="input-group-text">Is Primary </div>
                                        <input id="ID_Chk_Company_Contact_IsPrimary" type="checkbox">
                                    </div>
                                </form>
                            </div>
                        </div>
                        <div id="ID_Div_DataTable_Company_Contact_Full" class="card mt-0" style="display:none">
                            <h4 class="sub-title">Contact List</h4>
                            <div class="table-wrap" id="ID_Div_DataTable_Company_Contacts">
                            </div>
                        </div>
                    </div>
                </div>
                <div id="tab2" class="tab-pane fade">
                    <div id="ID_Div_Customer_Full" class="mb-0">
                        <div class="btn-wrap">
                            <button id="ID_Btn_Add_Customer_New" type="submit" class="btn btn-info mb-2">
                                Add a
                                Customer
                            </button>
                        </div>
                        <div id="ID_Div_Customer" style="display: none;">
                            <h4 class="sub-title title-align">Part 2 (New Customer)</h4>
                            <div class="btn-wrap">
                                <button id="ID_Btn_Customer_Cancel" type="submit" class="btn btn-info mb-2">
                                    Cancel Customer
                                </button>
                                <button id="ID_Btn_Customer_Update" type="submit" class="btn btn-info mb-2">
                                    Update Customer
                                </button>
                                <button id="ID_Btn_Customer_Add" type="submit" class="btn btn-info mb-2">
                                    Add Customer
                                </button>
                            </div>
                            <form class="form-inline">
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">Customer Code</div>
                                    <input id="ID_Txt_Customer_Code" type="text" class="form-control" disabled>
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Customer Name
                                    </div>
                                    <input id="ID_Txt_Customer_Name" type="text" class="form-control">
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Location
                                    </div>
                                    <select id="ID_Drp_Customer_Location" class="custom-select form-control"></select>
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Address Type
                                    </div>
                                    <select id="ID_Drp_Customer_Address_Type" class="custom-select form-control"></select>
                                </div>
                                <div class="input-group mb-12 mr-sm-12 w-100">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Address
                                    </div>
                                    <textarea id="ID_Txt_Customer_Address" type="text" class="form-control"></textarea>
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Line ID
                                    </div>
                                    <select id="ID_Drp_Customer_Line_Id" class="custom-select form-control"></select>
                                </div>
                                <div class="input-group mb-12 mr-sm-12 w-100">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>UID
                                    </div>
                                    @*<input id="ID_Txt_Customer_UID" type="text" class="form-control">*@
                                    <textarea id="ID_Txt_Customer_UID" type="text" class="form-control"></textarea>
                                </div>
                                <div style="display:none" class="input-group mb-6 mr-sm-6 activation-key">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Activation Key
                                    </div>
                                    <textarea id="ID_Txt_Customer_Activation_Key" class="form-control" readonly></textarea>
                                    <button id="ID_Btn_Customer_Activation_Key" type="button" class="btn btn-info mb-2">
                                        Get Activation Key
                                    </button>

                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">UID </div>
                                    <button id="ID_Btn_Customer_UID_Add" type="button" class="btn btn-info mb-2">
                                        Add UID
                                    </button>
                                    <button id="ID_Btn_Customer_UID_Update" type="button" class="btn btn-info mb-2">
                                        Update UID
                                    </button>
                                    <button id="ID_Btn_Customer_UID_Cancel" type="button" class="btn btn-info mb-2">
                                        Cancel UID
                                    </button>
                                </div>
                                <div id="ID_Div_Customer_DataTable_UID_List" class="card mt-0" style="display:block">
                                    <h4 class="sub-title">UID List</h4>
                                    <div class="table-wrap" id="ID_Div_DataTable_Customers_UID_List">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div id="ID_Div_Customer_Contact_Full" class="mb-0" style="display:none">
                        <div class="btn-wrap">
                            <button id="ID_Btn_Add_Customer_Contact_New" type="submit" class="btn btn-info mb-2">
                                Add a
                                Contact
                            </button>
                        </div>
                        <div id="ID_Div_Customer_Contact" style="display: none;">
                            <h4 class="sub-title title-align">Part 3 (New Contact)</h4>
                            <div class="btn-wrap">
                                <button id="ID_Btn_Customer_Contact_Cancel" type="submit" class="btn btn-info mb-2">
                                    Cancel Contact
                                </button>
                                <button id="ID_Btn_Customer_Contact_Update" type="submit" class="btn btn-info mb-2">
                                    Update Contact
                                </button>
                                <button id="ID_Btn_Customer_Contact_Add" type="submit" class="btn btn-info mb-2">
                                    Add Contact
                                </button>
                            </div>
                            <form class="form-inline">
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Contact Name
                                    </div>
                                    <input id="ID_Txt_Customer_Contact_Name" type="text" class="form-control">
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Mobile Number
                                    </div>
                                    <input id="ID_Txt_Customer_Contact_Mob" type="text" class="form-control">
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Email ID
                                    </div>
                                    <input id="ID_Txt_Customer_Contact_Email" type="email" class="form-control">
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Designation
                                    </div>
                                    <input id="ID_Txt_Customer_Contact_Desg" type="text" class="form-control">
                                </div>
                                <div class="input-group mb-12 mr-sm-12 w-100">
                                    <div class="input-group-text">
                                        <sup style="color: red;" title="this field is required">*</sup>
                                        Description
                                    </div>
                                    <textarea id="ID_Txt_Customer_Contact_Desc" type="text" class="form-control"></textarea>
                                </div>
                                <div class="input-group mb-6 mr-sm-6">
                                    <div class="input-group-text">Is Primary </div>
                                    <input id="ID_Chk_Customer_Contact_IsPrimary" type="checkbox">
                                </div>
                            </form>
                        </div>
                        <div id="ID_Div_Customer_Contact_DataTable_Full" class="card mt-0" style="display:none">
                            <h4 class="sub-title">Contact List</h4>
                            <div class="table-wrap" id="ID_Div_DataTable_Customers_Contacts">
                            </div>
                        </div>
                    </div>
                    <div id="ID_Div_Customer_DataTable_Full" class="card mt-0" style="display:none">
                        <h4 class="sub-title">Customer List</h4>
                        <div class="table-wrap" id="ID_Div_DataTable_Customers">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
@Html.Partial("~/Views/PartialViews/Message_PartialView.cshtml")

<script>
    var redirectUrlAfterLogin = "";
    var CompanyList, CompanyItem,
        CompanyContactItem, CompanyContactList,
        CustomerList, Customer,
        CustomerContactItem, CustomerContactList,
        CustomerUIDItem, CustomerUIDList,
        CompanyID = 0,
        CUSTOMERCONTACTID = 0,
        CUSTOMERUIDITEMID = 0,
        COMPANYCONTACTID = 0,
        CustomerID = 0;
    var messageText;
    var TempPattern_CompanyContact = 'Tmp_Comp_Cont_', TempPattern_CustomerContact = 'Tmp_Cust_Cont_', TempPattern_Customer = 'Tmp_Cust_', TempPattern_CustomerUIDItemID = 'Tmp_Cust_UID_';
    $(document).ready(function () {
        GetNotification();
        AllEvents();
        LoadCompaniesList();

    });
    function ValidationPopUpwithText(Message) {
        setTimeout(function () {
            autoAcceptUntrustedCertificatesForOpcUaClient = false;
            if (Message != undefined) {
                $("#infoModalBody").text(Message);
                $("#modal-info").modal('show');
            }
        }, 500);
    }
    function GetNotification() {
        debugger;
        $.ajax({
            url: Q.resolveUrl('~/Common/GetNotification'),
            type: 'GET',
            async: false,
            success: function (response) {
                if (response.IsStatus) {
                    ValidationPopUpwithText(response.Data);
                }
            },
            error: function (response) {
            }
        });

    }

    function ServerNotification(data) {
        $("#ID_Body_ServerNotification").html("");
        $("#ID_Body_ServerNotification").html(data.Body);
        $("#ID_Error_Message").html(data.ErrorMessage);
        $('#ID_ServerNotification').modal('show');

    }
    function ValidationPopUp(Basictext, Replacetext) {
        setTimeout(function () {
            autoAcceptUntrustedCertificatesForOpcUaClient = false;
            if (messageText != undefined) {
                messageText = messageText.replace(Basictext, Replacetext);
                $("#infoModalBody").text(messageText);
                $("#modal-info").modal('show');
            }
        }, 500);
    }


    function getMessageDetailsById(messageTypeId) {
        $.ajax({
            url: Q.resolveUrl('~/Common/GetMessageDetailsById'),
            type: 'GET',
            data: { "messageTypeId": messageTypeId },
            dataType: 'json',
            success: function (response) {
                if (response.IsStatus) {
                    return messageText = response.Data;
                }

            },
            error: function (response) {
            }
        });

    }
    function ShowMessage(data) {
        debugger;
        if (data != null) {
            $("#successModalBody").text(data.Data);
            $("#modal-success").modal('show');
        }
    }
    function ConvertCustomerListToStringitems() {
        if (typeof CustomerList != "undefined") {
            if (typeof CustomerList == "object") {
                for (var i = 0; i < CustomerList.length; i++) {
                    if (_.isNumber(CustomerList[i].CUSTOMERID))
                        CustomerList[i].CUSTOMERID = JSON.stringify(CustomerList[i].CUSTOMERID);
                    if (_.isNumber(CustomerList[i].COMPANYID))
                        CustomerList[i].COMPANYID = JSON.stringify(CustomerList[i].COMPANYID);
                }
            }
        }
        if (typeof CustomerContactList != "undefined") {
            if (typeof CustomerContactList == "object") {
                for (var i = 0; i < CustomerContactList.length; i++) {
                    if (_.isNumber(CustomerContactList[i].CUSTOMERID))
                        CustomerContactList[i].CUSTOMERID = JSON.stringify(CustomerContactList[i].CUSTOMERID);
                    if (_.isNumber(CustomerContactList[i].COMPANYID))
                        CustomerContactList[i].COMPANYID = JSON.stringify(CustomerContactList[i].COMPANYID);
                }
            }
        }
        if (typeof CustomerUIDList != "undefined") {
            if (typeof CustomerUIDList == "object") {
                for (var i = 0; i < CustomerUIDList.length; i++) {
                    if (_.isNumber(CustomerUIDList[i].CUSTOMERID))
                        CustomerUIDList[i].CUSTOMERID = JSON.stringify(CustomerUIDList[i].CUSTOMERID);
                    if (_.isNumber(CustomerUIDList[i].COMPANYID))
                        CustomerUIDList[i].COMPANYID = JSON.stringify(CustomerUIDList[i].COMPANYID);
                }
            }
        }
    }
    function GenerateCode() {
        var temp = $('#ID_Txt_Company_Code').val().trim();
        if (temp == "") {
            $("#ID_Btn_Customer_Cancel").click();
        }
        else {
            debugger;
            var itemcount = 0;
            if (typeof CustomerList != "undefined") {
                itemcount = CustomerList.length;
            }
            //$('#ID_Txt_Customer_Code').val(_.uniqueId(temp + itemcount));
            $('#ID_Txt_Customer_Code').val(temp + "000" + (itemcount + 1));
        }
    }
    function AllEvents() {
        CommonEvents();
        EventsCompany();
        EventsCompanyContacts();
        EventsCustomers();
        EventsCustomerContacts();
        EventsCustomerUID();
    }
    function CommonEvents() {
        $("#ID_Btn_Refresh").click(function () {
            location.reload();
        });
        $("#ID_Txt_Company_Name").on("input", function () {
            var CompanyCode = $("#ID_Txt_Company_Name").val().slice(0, 3);
            $("#ID_Txt_Company_Code").val(CompanyCode);
        });
        $("#ID_Txt_Customer_UID").change(function () {
            $("#ID_Txt_Customer_Activation_Key").val("");
        });

    }
    function EventsCompany() {
        $("#ID_Btn_Add_Company").click(function () {
            Reset();
            CompanyBasicLoad();
            ShowNewCustomer();
            $("#ID_Div_DataTable_Customers").hide();
            $('#ID_Drp_Company_Address_Type').val(1);

        });
        $("#ID_Btn_Company_Cancel").click(function () {
            if (confirm("Do you want to cancel?")) {
                Reset();
            }
        });
        $("#ID_Btn_Company_Clear").click(function () {
            if (confirm("Do you want to clear?")) {
                Clear_Tab_Basic();
            }
        });
        $("#ID_Btn_Company_Save").click(function () {
            if (confirm("Do you want to Save?")) {
                if (Validate_Tab_Basic()) {
                    SaveCompany();
                }
            }
        });
        $("#ID_Btn_Company_Update").click(function () {
            if (confirm("Do you want to Update the Company?")) {
                if (Validate_Tab_Basic()) {
                    UpdateCompany();
                }
            }
        });
        $("#ID_Txt_Company_Name").change(function () {
            var CompanyName = $('#ID_Txt_Company_Name').val();
            if (IsValueUnique(CompanyName, 'COMPANYNAME')) {
                console.log("Company name is already used.")
                $("#ID_Txt_Company_Name").val("");
                $("#ID_Txt_Company_Name").focus();
            }
        });
    }
    function EventsCompanyContacts() {
        $("#ID_Btn_Add_Company_Contact_New").click(function () {
            //CustomerBasicLoad();
            New_Tab_Basic_Contact();
        });
        $("#ID_Btn_Company_Contact_Cancel").click(function () {
            if (confirm("Do you want to clear contacts?")) {
                Reset_Tab_Basic_Contact();
            }
        });
        // Add Missing , Data Table Loading
        $("#ID_Btn_Company_Contact_Add").click(function () {
            if (confirm("Do you want to add contacts?")) {
                if (Validate_Tab_Basic_Contact()) {
                    AddNewCompany_Contact();
                }
            }
        });
        $("#ID_Btn_Company_Contact_Update").click(function () {
            if (confirm("Do you want to Update contacts?")) {
                UpdateNewCompany_Contact();
            }
        });
    }
    function EventsCustomers() {
        $("#ID_Btn_Add_Customer_New").click(function () {
            var temp = $('#ID_Txt_Company_Code').val().trim();
            if (temp != "") {
                CustomerBasicLoad();
                New_Tab_Advanced_Customer();
                //Reset_Tab_Advanced();
            }
        });
        $("#ID_Btn_Customer_Cancel").click(function () {
            if (confirm("Do you want to clear?")) {
                Reset_Tab_Advanced();
            }
        });
        $("#ID_Btn_Customer_Activation_Key").click(function () {
            //var UID = $("#ID_Txt_Customer_UID").val();
            //GetDataFromAPI('ID_Btn_Customer_Activation_Key', 'GetActivationkey?UID=' + encodeURIComponent(UID));
        });
        $("#ID_Btn_Customer_Add").click(function () {
            if (confirm("Do you want to Add the Customer?")) {
                if (Validate_Tab_Advanced_Customer()) {
                    AddNewCustomer();
                }
            }
        });
        $("#ID_Btn_Customer_Update").click(function () {
            if (confirm("Do you want to Update the Customer?")) {
                if (Validate_Tab_Advanced_Customer()) {
                    UpdateNewCustomer();
                }
            }
        });
    }
    function EventsCustomerContacts() {
        $("#ID_Btn_Add_Customer_Contact_New").click(function () {
            // CustomerBasicLoad();
            New_Tab_Advanced_Contact();
        });
        $("#ID_Btn_Customer_Contact_Cancel").click(function () {
            if (confirm("Do you want to clear contacts?")) {
                Reset_Tab_Advanced_Contact();
            }
        });
        // Add Missing , Data Table Loading

        $("#ID_Btn_Customer_Contact_Update").click(function () {
            if (confirm("Do you want to Update contacts?")) {
                UpdateNewCustomer_Contact();
            }
        });
        $("#ID_Btn_Customer_Contact_Add").click(function () {
            if (confirm("Do you want to Add contacts?")) {
                if (Validate_Tab_Advanced_Customer_Contact()) {
                    AddNewCustomer_Contact();
                }
            }
        });
    }
    function EventsCustomerUID() {
        $("#ID_Btn_Customer_UID_Add").click(function () {
            if (confirm("Do you want to Add UID Details?")) {
                var UID = $("#ID_Txt_Customer_UID").val();
                GetDataFromAPI('ID_Btn_Customer_Activation_Key', 'GetActivationkey?UID=' + encodeURIComponent(UID));
                if (Validate_Tab_Advanced_Customer_UID()) {
                    AddNewCustomer_UID();
                }
            }
        });
        $("#ID_Btn_Customer_UID_Update").click(function () {
            if (confirm("Do you want to Update UID Details?")) {
                if (Validate_Tab_Advanced_Customer_UID()) {
                    UpdateNewCustomer_UID();
                }
            }
        });
        $("#ID_Btn_Customer_UID_Cancel").click(function () {
            if (confirm("Do you want to Cancel UID Details?")) {
                Reset_Tab_Advanced_UID();
            }
        });
    }
    //UID Management
    function AddNewCustomer_UID() {
        ConvertCustomerListToStringitems();
        //Text Box
        var ID_Drp_Customer_Line_Id = $("#ID_Drp_Customer_Line_Id  option:selected").val();
        var ID_Drp_Customer_Line_IdName = $("#ID_Drp_Customer_Line_Id  option:selected").text();
        var ID_Txt_Customer_UID = $("#ID_Txt_Customer_UID").val().trim();
        var ID_Txt_Customer_Activation_Key = $("#ID_Txt_Customer_Activation_Key").val().trim();

        var TempCustomerUIDList = _.findWhere(CustomerUIDList, {
            CUSTOMERUID: ID_Txt_Customer_UID
        });
        // New Code, Validation need to be converted to popup
        if (typeof TempCustomerUIDList != "undefined") {
            if (!($.isEmptyObject(TempCustomerUIDList))) {
                messageText = getMessageDetailsById(39);
                ValidationPopUp("Control", "UID");
                //console.log("Duplicate UID , Validation error")
                return;
            }
        }
        CustomerUIDItem = {
            CUSTOMERID: CustomerID,
            COMPANYID: CompanyID,
            UIDITEMID: _.uniqueId(TempPattern_CustomerUIDItemID),
            CUSTOMERLINEID: ID_Drp_Customer_Line_Id,
            CUSTOMERLINEIDNAME: ID_Drp_Customer_Line_IdName,
            CUSTOMERUID: ID_Txt_Customer_UID,
            CUSTOMERACTIVATION_KEY: ID_Txt_Customer_Activation_Key,
            Status: 'Active',
            LOCALCOPY: true
        };
        if (typeof CustomerUIDList == "undefined") {
            CustomerUIDList = new Array();
        }
        CustomerUIDList.push(CustomerUIDItem);
        console.log(CustomerUIDList);
        BindCustomerUIDListDataTable(CustomerUIDList);
        Reset_Tab_Advanced_UID();
    }
    function UpdateNewCustomer_UID() {
        //Text Box
        //Text Box
        var ID_Drp_Customer_Line_Id = $("#ID_Drp_Customer_Line_Id  option:selected").val();
        var ID_Drp_Customer_Line_IdName = $("#ID_Drp_Customer_Line_Id  option:selected").text();
        var ID_Txt_Customer_UID = $("#ID_Txt_Customer_UID").val();
        var ID_Txt_Customer_Activation_Key = $("#ID_Txt_Customer_Activation_Key").val();
        // Remove item from array then push the updated content
        CustomerUIDList = _.without(CustomerUIDList, _.findWhere(CustomerUIDList, {
            UIDITEMID: CUSTOMERUIDITEMID
        }));
        CustomerUIDItem = {
            CUSTOMERID: CustomerID,
            COMPANYID: CompanyID,
            UIDITEMID: CUSTOMERUIDITEMID,
            CUSTOMERLINEID: ID_Drp_Customer_Line_Id,
            CUSTOMERLINEIDNAME: ID_Drp_Customer_Line_IdName,
            CUSTOMERUID: ID_Txt_Customer_UID,
            CUSTOMERACTIVATION_KEY: ID_Txt_Customer_Activation_Key,
            Status: 'Active',
            LOCALCOPY: true
        };
        if (typeof CustomerUIDList == "undefined") {
            CustomerUIDList = new Array();
        }
        CustomerUIDList.push(CustomerUIDItem);
        console.log(CustomerUIDList);
        BindCustomerUIDListDataTable(CustomerUIDList);
        Reset_Tab_Advanced_UID();
    }
    function GetAllCustomerUIDLIST(ID) {
        CustomerID = ID;
        var apiPath = "GetCustomerAllUIDById?CompanyID=" + CompanyID + "&CustomerID=" + ID;
        // Call Ajax
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (Data) {
                BindCustomerUIDListDataTable(Data);
            },
            eror: function (Data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function BindCustomerUIDListDataTable(Data) {
        CustomerUIDList = Data;
        // Remove item from array then push the updated content
        Data = _.filter(Data, function (item) { return item.STATUS != 'InActive'; })

        $("#ID_Div_DataTable_Customers_UID_List").html("");
        $("#ID_Div_DataTable_Customers_UID_List").html('<table id="ID_DataTable_Customers_UID_List"  class="displays table-striped table-bordered nowrap cell-border" width="100%" cellspacing="0">' +
            '<thead>' +
            '<tr><th>Line ID</th> ' +
            '<th>UID</th>' +
            '<th>Activation Key</th>' +
            //'<th>Edit</th> ' +
            '<th>Copy</th> </tr>' +
            '</thead> ' +
            '<tbody id="ID_DataTable_Customers_UID_List_Items"></table>');
        var content = '';
        var contentall = '';
        if (Data != null) {
            //CustomerList = Data;
            for (var i = 0; i < Data.length; i++) {
                content = '<tr>' +
                    '<td>' + Data[i].CUSTOMERLINEIDNAME + '</td>' +
                    '<td>' + Data[i].CUSTOMERUID + '</td>' +
                    '<td>' + Data[i].CUSTOMERACTIVATION_KEY + '</td>';
                if (JSON.stringify(Data[i].UIDITEMID).indexOf(TempPattern_CustomerUIDItemID) != -1) {
                    content +=
                        //'<td>' + 'NA' + '</td>' +
                        //'<td>' + '<a onclick=CustomerUIDListItemDelete("' + Data[i].UIDITEMID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                        '<td>' + 'NA' + '</td>';
                } else {
                    content +=
                        //'<td>' + '<a onclick=CustomerUIDListItemUpdate("' + Data[i].UIDITEMID + '"); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
                        //'<td>' + '<a onclick=CustomerUIDListItemDelete("' + Data[i].UIDITEMID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                        '<td>' + 'NA' + '</td>';
                }
                content += '</tr>';
                contentall = contentall + content;
                content = '';
            }
            $("#ID_DataTable_Customers_UID_List_Items").html(contentall);
        }
        $("#ID_DataTable_Customers_UID_List").DataTable({
            "order": [
                [0, "desc"]
            ],
            "columnDefs": [
                { className: "DatatableColumnControl", "targets": [1, 2] }]
        });
        $("#ID_DataTable_Customers_UID_List").show();
        $("#ID_Div_DataTable_Customers_UID_List").show();
        $("#ID_Div_Customer_DataTable_UID_List").show();
    }
    function CustomerUIDListItemDelete(ID) {
        if (confirm("Are You sure to delete the UID?")) {
            var CUSTOMERUIDITEMID = ID;
            CustomerUIDItem_old = _.findWhere(CustomerUIDList, {
                UIDITEMID: CUSTOMERUIDITEMID
            });
            // Remove item from array then push the updated content
            CustomerUIDList = _.without(CustomerUIDList, _.findWhere(CustomerUIDList, {
                UIDITEMID: CUSTOMERUIDITEMID
            }));

            CustomerUIDItem = {
                UIDITEMID: CUSTOMERUIDITEMID,
                CUSTOMERID: CustomerUIDItem_old.CUSTOMERID,
                COMPANYID: CustomerUIDItem_old.COMPANYID,
                STATUS: 'InActive',
                LOCALCOPY: true

            };
            if (typeof CustomerUIDList == "undefined") {
                CustomerUIDList = new Array();
            }
            CustomerUIDList.push(CustomerUIDItem);
            console.log(CustomerUIDList);
            BindCustomerUIDListDataTable(CustomerUIDList);
        }
    }
    function CustomerUIDListItemUpdate(ID) {
        //Need work End Point and SQL
        CUSTOMERUIDITEMID = ID;
        var templist = _.findWhere(CustomerUIDList, {
            UIDITEMID: CUSTOMERUIDITEMID, LOCALCOPY: true
        });
        if (typeof templist != "undefined") {
            templistarray = new Array();
            templistarray.push(templist);
            BindCustomerUIDListDataTable(ID, templistarray);
        }
        else {
            var apiPath = "GetCustomerUIDById?CompanyID=" + CompanyID + "&CustomerID=" + CustomerID + "&UIDItemID=" + ID;
            // Call Ajax
            $.ajax({
                url: apiPath,
                headers: {
                    Accept: "application/json;odata=verbose"
                },
                async: false,
                success: function (Data) {
                    BindCustomerUIDListItem(ID, Data);
                },
                eror: function (Data) {
                    console.log("An error occurred. Please try again.");
                }
            });
        }
    }
    function BindCustomerUIDListItem(ID, Data) {
        // Loading Div and other controls
        New_Tab_Advanced_UIDItem_Update();
        for (var i = 0; i < Data.length; i++) {
            $("#ID_Txt_Customer_UID").val(Data[i].CUSTOMERUID);
            $("#ID_Txt_Customer_Activation_Key").val(Data[i].CUSTOMERACTIVATION_KEY);
            $("#ID_Drp_Customer_Line_Id").val(Data[i].CUSTOMERLINEID);
        }
    }
    function New_Tab_Advanced_UIDItem_Update() {

        //Buttons
        $("#ID_Btn_Customer_UID_Update").show();
        $("#ID_Btn_Customer_UID_Cancel").show();
        $("#ID_Btn_Customer_UID_Add").hide();
        //Text Box
        $("#ID_Txt_Customer_UID").val("");
        $("#ID_Txt_Customer_Activation_Key").val("");
        // Dropdown
        $('#ID_Drp_Customer_Line_Id').prop('selectedIndex', 0);
    }
    function Reset_Tab_Advanced_UID() {
        //Buttons
        $("#ID_Btn_Customer_UID_Update").hide();
        $("#ID_Btn_Customer_UID_Cancel").hide();
        $("#ID_Btn_Customer_UID_Add").show();
        //Text Box
        $("#ID_Txt_Customer_UID").val("");
        $("#ID_Txt_Customer_Activation_Key").val("");
        // Dropdown
        $('#ID_Drp_Customer_Line_Id').prop('selectedIndex', 0);
    }
    function Clear_Tab_Advanced_UID() {
        CustomerUIDList = new Array();
        CUSTOMERUIDITEMID = null;
        $("#ID_Div_DataTable_Customers_UID_List").html("");
        $("#ID_Div_Customer_DataTable_UID_List").hide();
    }
    //UID Management Ends
    //Validation
    function Validate_Tab_Basic_Contact() {
        if ($('#ID_Txt_Company_Contact_Name').val().length < 1 ||
            $('#ID_Txt_Company_Contact_Mob').val().length < 1 ||
            $('#ID_Txt_Company_Contact_Email').val().length < 1 ||
            $('#ID_Txt_Company_Contact_Desg').val().length < 1
            //||
            //$('#ID_Txt_Company_Contact_Desc').val().length < 1
        ) {
            messageText = getMessageDetailsById(28);
            ValidationPopUp("", "");
            return false;
        }
        if (!Validate_IsEmail($('#ID_Txt_Company_Contact_Email').val())) {
            messageText = getMessageDetailsById(33);
            ValidationPopUp("Data", "Email Address");
            //console.log("Please enter a valid Email Address.");
            return false;
        }
        if (!Validate_IsPhoneNumber($('#ID_Txt_Company_Contact_Mob').val())) {
            messageText = getMessageDetailsById(33);
            ValidationPopUp("Data", "Mobile Number");
            //console.log("Please enter a valid Mobile Number.");
            return false;
        }
        return true;
    }
    function Validate_Tab_Basic() {
        if ($('#ID_Txt_Company_Code').val().length < 1 ||
            $('#ID_Txt_Company_Name').val().length < 1 ||
            $('#ID_Txt_Company_Address').val().length < 1 ||
            $("#ID_Drp_Company_Location")[0].selectedIndex < 1 ||
            $("#ID_Drp_Company_Address_Type")[0].selectedIndex < 1
        ) {
            messageText = getMessageDetailsById(28);
            ValidationPopUp("", "");
            return false;
        }
        return true;
    }
    function Validate_Tab_Advanced_Customer() {
        if ($('#ID_Txt_Customer_Code').val().length < 1 ||
            $('#ID_Txt_Customer_Name').val().length < 1 ||
            $('#ID_Txt_Customer_Address').val().length < 1 ||
            //$('#ID_Txt_Customer_UID').val().length < 1 ||
            //$('#ID_Txt_Customer_Activation_Key').val().length < 1 ||
            //$("#ID_Drp_Customer_Line_Id")[0].selectedIndex < 1 ||
            $("#ID_Drp_Customer_Location")[0].selectedIndex < 1 ||
            $("#ID_Drp_Customer_Address_Type")[0].selectedIndex < 1
        ) {
            messageText = getMessageDetailsById(28);
            ValidationPopUp("", "");
            return false;
        }
        return true;
    }
    function Validate_Tab_Advanced_Customer_Contact() {
        if ($('#ID_Txt_Customer_Contact_Name').val().length < 1 ||
            $('#ID_Txt_Customer_Contact_Mob').val().length < 1 ||
            $('#ID_Txt_Customer_Contact_Email').val().length < 1 ||
            $('#ID_Txt_Customer_Contact_Desg').val().length < 1
            //||
            //$('#ID_Txt_Customer_Contact_Desc').val().length < 1
        ) {
            messageText = getMessageDetailsById(28);
            ValidationPopUp("", "");
            return false;
        }
        if (!Validate_IsEmail($('#ID_Txt_Customer_Contact_Email').val())) {
            messageText = getMessageDetailsById(33);
            ValidationPopUp("Data", "Email Address");
            //console.log("Please enter a valid Email Address.");
            return false;
        }
        if (!Validate_IsPhoneNumber($('#ID_Txt_Customer_Contact_Mob').val())) {
            messageText = getMessageDetailsById(33);
            ValidationPopUp("Data", "Mobile Number");
            //console.log("Please enter a valid Mobile Number.");
            return false;
        }
        return true;
    }
    function Validate_Tab_Advanced_Customer_UID() {
        if ($("#ID_Drp_Customer_Line_Id")[0].selectedIndex < 1 ||
            $('#ID_Txt_Customer_UID').val().trim().length < 1 ||
            $('#ID_Txt_Customer_Activation_Key').val().length < 1
        ) {
            messageText = getMessageDetailsById(28);
            ValidationPopUp("", "");
            return false;
        }
        return true;
    }
    function Validate_IsEmail(email) {
        var re = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return re.test(String(email).toLowerCase());
    }
    function Validate_IsPhoneNumber(phNumber) {
        var regPh = /^[0-9][0-9]{9}$/;
        return regPh.test(phNumber);
    }
    function IsValueUnique(value, name) {
        var Content = false;
        var apiPath = "CheckValueIsUnique?value=" + value + "&name=" + name;
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (data) {
                if (data != null) {
                    if (data.length > 0) {
                        Content = data[0].IsUsed;
                    }
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
        return Content;
    }
    //Validation Ends
    function UpdateCompanyListItem(ID) {
        var apiPath = "GetCompanyInfoById?CompanyID=" + ID;
        CompanyID = ID;
        CompanyBasicLoad();
        ShowNewCustomer();
        //Ajax call
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (Data) {
                BindCompanyBasicData(CompanyID, Data);
                GetAllCompanyContacts(CompanyID);
                LoadCustomerList(CompanyID);
            },
            eror: function (Data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function DeleteCompanyListItem(ID) {
        if (confirm("Do you want to Delete the Company?")) {
            CompanyID = ID;
            var BasicInfo = {
                COMPANYID: CompanyID,
                STATUS: 'InActive'
            };
            var apiPath = "CustomerDelete";
            $.ajax({
                method: "POST",
                url: apiPath,
                data: {
                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(), LicenseValue: JSON.stringify(BasicInfo)
                },
                headers: {
                    Accept: "application/json;odata=verbose"
                },
                async: false,
                success: function (data) {
                    Reset();
                },
                eror: function (data) {
                    console.log("An error occurred. Please try again.");
                }
            });
        }
    }
    function BindCompanyBasicData(ID, Data) {
        //Buttons
        $("#ID_Btn_Company_Update").show();
        $("#ID_Btn_Company_Clear").show();
        $("#ID_Btn_Company_Cancel").show();
        $("#ID_Btn_Company_Save").hide();
        //Text Box
        $("#ID_Txt_Company_Code").val("");
        $("#ID_Txt_Company_Name").val("");
        $("#ID_Txt_Company_Address").val("");
        // Select
        $('#ID_Drp_Company_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Company_Address_Type').prop('selectedIndex', 0);
        for (var i = 0; i < Data.length; i++) {
            //Text Box
            $("#ID_Txt_Company_Code").val(Data[i].HEADCODE);
            $("#ID_Txt_Company_Name").val(Data[i].COMPANYNAME);
            $("#ID_Txt_Company_Address").val(Data[i].ADDRESS);
            // Select
            $('#ID_Drp_Company_Location').val(Data[i].LOCATION);
            $('#ID_Drp_Company_Address_Type').val(Data[i].ADDRESSTYPE);
        }
    }
    function UpdateCustomerListItem(ID) {
        CustomerID = ID;
        ConvertCustomerListToStringitems();
        var templist = _.findWhere(CustomerList, {
            CUSTOMERID: CustomerID, LOCALCOPY: true
        });
        if (typeof templist != "undefined") {
            templistarray = new Array();
            templistarray.push(templist);
            BindCustomerListItem(ID, templistarray);
            BindCustomerContactListDataTable(templist.CONTACTLIST);
        } else {
            var apiPath = "GetCustomerInfoById?CompanyID=" + ID;
            // Call Ajax
            $.ajax({
                url: apiPath,
                headers: {
                    Accept: "application/json;odata=verbose"
                },
                async: false,
                success: function (Data) {
                    BindCustomerListItem(ID, Data);
                    GetAllCustomerContacts(CustomerID);
                    GetAllCustomerUIDLIST(CustomerID);
                },
                eror: function (Data) {
                    console.log("An error occurred. Please try again.");
                }
            });
        }
    }
    function BindCustomerListItem(ID, Data) {
        CustomerBasicLoad();
        New_Tab_Advanced_Customer_Update();
        for (var i = 0; i < Data.length; i++) {
            //Text Box
            $("#ID_Txt_Customer_Code").val(Data[i].CUSTOMERCODE);
            $("#ID_Txt_Customer_Name").val(Data[i].CUSTOMERNAME);
            $("#ID_Txt_Customer_Address").val(Data[i].CUSTOMERADDRESS);
            //$("#ID_Txt_Customer_UID").val(Data[i].CUSTOMERUID);
            //$("#ID_Txt_Customer_Activation_Key").val(Data[i].CUSTOMERACTIVATION_KEY);
            // Select
            $('#ID_Drp_Customer_Location').val(Data[i].CUSTOMERLOCATION);
            $('#ID_Drp_Customer_Address_Type').val(Data[i].CUSTOMERADDRESSTYPE);
            //$('#ID_Drp_Customer_Line_Id').val(Data[i].CUSTOMERLINEID);
        }
    }
    function CompanyBasicLoad() {
        BindDropDownswithAPI('ID_Drp_Company_Location', 'GetLocation', 'ID', 'LOCATION');
        BindDropDownswithAPI('ID_Drp_Company_Address_Type', 'GetAddressType', 'ID', 'ADDRESSTYPE');
    }
    function CustomerBasicLoad() {
        BindDropDownswithAPI('ID_Drp_Customer_Location', 'GetLocation', 'ID', 'LOCATION');
        BindDropDownswithAPI('ID_Drp_Customer_Address_Type', 'GetAddressTypeCustomer', 'ID', 'ADDRESSTYPE');
        BindDropDownswithAPI('ID_Drp_Customer_Line_Id', 'GetLineId', 'ID', 'LINENAME');
    }
    function ShowEditCompany(CompanyID) {
        LoadBasicInfo(CompanyID);
        LoadCustomerList(CompanyID);
    }
    function ShowNewCustomer() {
        $("#ID_Div_New_Customer").show();
        $("#ID_Div_DataTable_Companies").hide();

        //Buttons
        $("#ID_Btn_Company_Update").hide();
        $("#ID_Btn_Company_Clear").show();
        $("#ID_Btn_Company_Cancel").show();
        $("#ID_Btn_Company_Save").show();
        $("#ID_Btn_Add_Company").hide();

    }
    function Reset_Tab_Basic() {
        // Div
        $("#ID_Div_New_Customer").hide();
        //Buttons
        $("#ID_Btn_Company_Update").hide();
        $("#ID_Btn_Company_Clear").show();
        $("#ID_Btn_Company_Cancel").show();
        $("#ID_Btn_Company_Save").show();
        //Text Box
        $("#ID_Txt_Company_Code").val("");
        $("#ID_Txt_Company_Name").val("");
        $("#ID_Txt_Company_Address").val("");
        // Select
        $('#ID_Drp_Company_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Company_Address_Type').prop('selectedIndex', 0);
    }
    function Clear_Tab_Basic() {
        //Text Box
        $("#ID_Txt_Company_Code").val("");
        $("#ID_Txt_Company_Name").val("");
        $("#ID_Txt_Company_Address").val("");
        // Select
        $('#ID_Drp_Company_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Company_Address_Type').prop('selectedIndex', 0);
    }
    function Clear_Tab_Basic_Contact() {
        CompanyContactItem = null;
        CompanyContactList = new Array();
        $("#ID_Div_DataTable_Company_Contacts").html("");
        $("#ID_Div_DataTable_Company_Contact_Full").hide();
    }
    function Clear_Tab_Advanced_Contact() {
        CustomerContactItem = null;
        CustomerContactList = new Array();
        $("#ID_Div_DataTable_Customers_Contacts").html("");
        $("#ID_Div_Customer_Contact_DataTable_Full").hide();
    }
    function Reset_Tab_Advanced() {
        //Div
        $("#ID_Div_Customer").hide();
        $("#ID_Div_Customer_Contact_Full").hide();
        // Buttons
        $("#ID_Btn_Customer_Update").hide();
        $("#ID_Btn_Customer_Cancel").show();
        $("#ID_Btn_Customer_Add").show();
        $("#ID_Btn_Add_Customer_New").show();
        //Text Box
        $("#ID_Txt_Customer_Code").val("");
        $("#ID_Txt_Customer_Name").val("");
        $("#ID_Txt_Customer_Address").val("");
        $("#ID_Txt_Customer_UID").val("");
        $("#ID_Txt_Customer_Activation_Key").val("");
        // Select
        $('#ID_Drp_Customer_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Address_Type').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Line_Id').prop('selectedIndex', 0);
        // Cleaning Objects
        Clear_Tab_Advanced_Contact();
        Reset_Tab_Advanced_Contact();
        Clear_Tab_Advanced_UID();
        Reset_Tab_Advanced_UID();
    }
    function Reset_Tab_Basic_Contact() {
        // Div
        $("#ID_Div_Company_Contact").hide();
        //Buttons
        $("#ID_Btn_Company_Contact_Update").hide();
        $("#ID_Btn_Company_Contact_Cancel").show();
        $("#ID_Btn_Company_Contact_Add").show();
        //Text Box
        $("#ID_Txt_Company_Contact_Name").val("");
        $("#ID_Txt_Company_Contact_Mob").val("");
        $("#ID_Txt_Company_Contact_Email").val("");
        $("#ID_Txt_Company_Contact_Desg").val("");
        $("#ID_Txt_Company_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Company_Contact_IsPrimary').prop('checked', false);
    }
    function Reset_Tab_Advanced_Contact() {
        // Div
        $("#ID_Div_Customer_Contact").hide();
        //Buttons
        $("#ID_Btn_Customer_Contact_Update").hide();
        $("#ID_Btn_Customer_Contact_Cancel").show();
        $("#ID_Btn_Customer_Contact_Add").show();
        $("#ID_Btn_Add_Customer_Contact_New").show();
        //Text Box
        $("#ID_Txt_Customer_Contact_Name").val("");
        $("#ID_Txt_Customer_Contact_Mob").val("");
        $("#ID_Txt_Customer_Contact_Email").val("");
        $("#ID_Txt_Customer_Contact_Desg").val("");
        $("#ID_Txt_Customer_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Customer_Contact_IsPrimary').prop('checked', false);
    }
    function New_Tab_Basic_Contact() {
        // Div
        $("#ID_Div_Company_Contact").show();
        //Buttons
        $("#ID_Btn_Company_Contact_Update").hide();
        $("#ID_Btn_Company_Contact_Cancel").show();
        $("#ID_Btn_Company_Contact_Add").show();
        //Text Box
        $("#ID_Txt_Company_Contact_Name").val("");
        $("#ID_Txt_Company_Contact_Mob").val("");
        $("#ID_Txt_Company_Contact_Email").val("");
        $("#ID_Txt_Company_Contact_Desg").val("");
        $("#ID_Txt_Company_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Company_Contact_IsPrimary').prop('checked', false);
    }
    function New_Tab_Basic_Contact_Update() {
        // Div
        $("#ID_Div_Company_Contact").show();
        //Buttons
        $("#ID_Btn_Company_Contact_Update").show();
        $("#ID_Btn_Company_Contact_Cancel").show();
        $("#ID_Btn_Company_Contact_Add").hide();
        //Text Box
        $("#ID_Txt_Company_Contact_Name").val("");
        $("#ID_Txt_Company_Contact_Mob").val("");
        $("#ID_Txt_Company_Contact_Email").val("");
        $("#ID_Txt_Company_Contact_Desg").val("");
        $("#ID_Txt_Company_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Company_Contact_IsPrimary').prop('checked', false);
    }
    function New_Tab_Advanced_Contact() {
        // Div
        $("#ID_Div_Customer_Contact").show();
        //Buttons
        $("#ID_Btn_Customer_Contact_Update").hide();
        $("#ID_Btn_Add_Customer_Contact_New").hide();
        $("#ID_Btn_Customer_Contact_Cancel").show();
        $("#ID_Btn_Customer_Contact_Add").show();
        //Text Box
        $("#ID_Txt_Customer_Contact_Name").val("");
        $("#ID_Txt_Customer_Contact_Mob").val("");
        $("#ID_Txt_Customer_Contact_Email").val("");
        $("#ID_Txt_Customer_Contact_Desg").val("");
        $("#ID_Txt_Customer_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Customer_Contact_IsPrimary').prop('checked', false);
    }
    function New_Tab_Advanced_Contact_Update() {
        // Div
        $("#ID_Div_Customer_Contact").show();
        $("#ID_Div_Customer_Contact_DataTable_Full").show();
        //Buttons
        $("#ID_Btn_Customer_Contact_Update").show();
        $("#ID_Btn_Customer_Contact_Cancel").show();
        $("#ID_Btn_Customer_Contact_Add").hide();
        //Text Box
        $("#ID_Txt_Customer_Contact_Name").val("");
        $("#ID_Txt_Customer_Contact_Mob").val("");
        $("#ID_Txt_Customer_Contact_Email").val("");
        $("#ID_Txt_Customer_Contact_Desg").val("");
        $("#ID_Txt_Customer_Contact_Desc").val("");
        // Checkout
        $('#ID_Chk_Customer_Contact_IsPrimary').prop('checked', false);
    }
    function New_Tab_Advanced_Customer() {
        //Div
        $("#ID_Div_Customer").show();
        $("#ID_Div_Customer_Contact_Full").show();
        $("#ID_Btn_Add_Customer_New").hide();
        // Buttons
        $("#ID_Btn_Customer_Update").hide();
        $("#ID_Btn_Customer_Cancel").show();
        $("#ID_Btn_Customer_Add").show();
        //Text Box
        $("#ID_Txt_Customer_Code").val("");
        $("#ID_Txt_Customer_Name").val("");
        $("#ID_Txt_Customer_Address").val("");
        $("#ID_Txt_Customer_UID").val("");
        $("#ID_Txt_Customer_Activation_Key").val("");
        // Select
        $('#ID_Drp_Customer_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Address_Type').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Line_Id').prop('selectedIndex', 0);
        CustomerID = 0;
        //Functions
        GenerateCode();
        // Cleaning Objects
        Clear_Tab_Advanced_Contact();
        Reset_Tab_Advanced_Contact();
        Clear_Tab_Advanced_UID();
        Reset_Tab_Advanced_UID();
    }
    function New_Tab_Advanced_Customer_Update() {
        //Div
        $("#ID_Div_Customer").show();
        // Buttons
        $("#ID_Btn_Customer_Update").show();
        $("#ID_Btn_Customer_Cancel").show();
        $("#ID_Btn_Customer_Add").hide();
        //Text Box
        $("#ID_Txt_Customer_Code").val("");
        $("#ID_Txt_Customer_Name").val("");
        $("#ID_Txt_Customer_Address").val("");
        $("#ID_Txt_Customer_UID").val("");
        $("#ID_Txt_Customer_Activation_Key").val("");
        // Select
        $('#ID_Drp_Customer_Location').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Address_Type').prop('selectedIndex', 0);
        $('#ID_Drp_Customer_Line_Id').prop('selectedIndex', 0);
        Reset_Tab_Advanced_UID();
    }
    function Reset_GlobalVar() {
        //Company
        CompanyID = 0;
        CompanyItem = null;
        CompanyList = new Array();
        CompanyContactItem = null;
        CompanyContactList = new Array();
        //Customer
        CustomerList = new Array();
        Customer = null;
        CustomerID = 0;
        CustomerContactItem = null;
        CustomerContactList = new Array();
        //UID
        CustomerUIDItem = null;
        CustomerUIDList = new Array();
    }
    function Reset() {
        Reset_Tab_Basic();
        Reset_Tab_Basic_Contact();
        Reset_Tab_Advanced();
        Reset_Tab_Advanced_Contact();
        Reset_GlobalVar();
        LoadCompaniesList();
        Reset_Tab_Advanced_UID();
        Clear_Tab_Advanced_UID();
        $("#ID_Btn_Add_Company").show();
        $("#ID_Div_DataTable_Companies").show();
    }
    function AddNewCustomer() {
        //Text Box
        var ID_Txt_Customer_Code = $("#ID_Txt_Customer_Code").val();
        var ID_Txt_Customer_Name = $("#ID_Txt_Customer_Name").val();
        var ID_Txt_Customer_Address = $("#ID_Txt_Customer_Address").val();
        var ID_Txt_Customer_UID = $("#ID_Txt_Customer_UID").val();
        var ID_Txt_Customer_Activation_Key = $("#ID_Txt_Customer_Activation_Key").val();
        //Select
        var ID_Drp_Customer_Location = $("#ID_Drp_Customer_Location  option:selected").val();
        var ID_Drp_Customer_LocationName = $("#ID_Drp_Customer_Location  option:selected").text();
        var ID_Drp_Customer_Address_Type = $("#ID_Drp_Customer_Address_Type  option:selected").val();
        var ID_Drp_Customer_Address_TypeName = $("#ID_Drp_Customer_Address_Type  option:selected").text();
        var ID_Drp_Customer_Line_Id = $("#ID_Drp_Customer_Line_Id  option:selected").val();
        var ID_Drp_Customer_Line_IdName = $("#ID_Drp_Customer_Line_Id  option:selected").text();
        var itemcount = 0;
        if (typeof CustomerList != "undefined") {
            itemcount = CustomerList.length;
        }
        CustomerID = _.uniqueId(TempPattern_Customer + itemcount);
        //Processing Customer Contact List
        if (typeof CustomerContactList == "undefined") {
            CustomerContactList = new Array();
        }
        else {
            for (var i = 0; i < CustomerContactList.length; i++) {
                //if (_.isNumber(CustomerContactList[i].CUSTOMERID))
                CustomerContactList[i].CUSTOMERID = CustomerID;
                //if (_.isNumber(CustomerContactList[i].COMPANYID))
                CustomerContactList[i].COMPANYID = CompanyID;
            }
        }
        //Processing Customer UID List
        if (typeof CustomerUIDList == "undefined") {
            CustomerUIDList = new Array();
        }
        else {
            for (var i = 0; i < CustomerUIDList.length; i++) {
                //if (_.isNumber(CustomerUIDList[i].CUSTOMERID))
                CustomerUIDList[i].CUSTOMERID = CustomerID;
                //if (_.isNumber(CustomerUIDList[i].COMPANYID))
                CustomerUIDList[i].COMPANYID = CompanyID;
            }
        }
        Customer = {
            CUSTOMERID: CustomerID,
            CUSTOMERCODE: ID_Txt_Customer_Code,
            CUSTOMERNAME: ID_Txt_Customer_Name,
            CUSTOMERADDRESS: ID_Txt_Customer_Address,
            CUSTOMERLOCATION: ID_Drp_Customer_Location,
            CUSTOMERLOCATIONNAME: ID_Drp_Customer_LocationName,
            CUSTOMERADDRESSTYPE: ID_Drp_Customer_Address_Type,
            CUSTOMERCONTACTID: 0,
            CUSTOMERCONTACTNAME: 0,
            CUSTOMERCONTACTNUMBER: 0,
            CUSTOMERNUMBER: 0,
            CUSTOMERLINEID: ID_Drp_Customer_Line_Id,
            CUSTOMERUID: ID_Txt_Customer_UID,
            CUSTOMERACTIVATION_KEY: ID_Txt_Customer_Activation_Key,
            CUSTOMERLINEIDNAME: ID_Drp_Customer_Line_IdName,
            CONTACTLIST: CustomerContactList,
            UIDList: CustomerUIDList,
            Status: 'Active',
            LOCALCOPY: true
        };
        if (typeof CustomerList == "undefined") {
            CustomerList = new Array();
        }
        else {
            ConvertCustomerListToStringitems();
        }
        CustomerList.push(Customer);
        console.log(CustomerList);
        BindCustomerListDataTable(CustomerList);
        Reset_Tab_Advanced();
    }
    function UpdateNewCustomer() {
        //Text Box
        var ID_Txt_Customer_Code = $("#ID_Txt_Customer_Code").val();
        var ID_Txt_Customer_Name = $("#ID_Txt_Customer_Name").val();
        var ID_Txt_Customer_Address = $("#ID_Txt_Customer_Address").val();
        var ID_Txt_Customer_UID = $("#ID_Txt_Customer_UID").val();
        var ID_Txt_Customer_Activation_Key = $("#ID_Txt_Customer_Activation_Key").val();
        //Select
        var ID_Drp_Customer_Location = $("#ID_Drp_Customer_Location  option:selected").val();
        var ID_Drp_Customer_Address_Type = $("#ID_Drp_Customer_Address_Type  option:selected").val();
        var ID_Drp_Customer_Line_Id = $("#ID_Drp_Customer_Line_Id  option:selected").val();
        // Remove item from array then push the updated content
        ConvertCustomerListToStringitems();
        CustomerList = _.without(CustomerList, _.findWhere(CustomerList, {
            CUSTOMERID: CustomerID
        }));
        if (typeof CustomerContactList == "undefined") {
            CustomerContactList = new Array();
        }
        else {
            for (var i = 0; i < CustomerContactList.length; i++) {
                //if (_.isNumber(CustomerContactList[i].CUSTOMERID))
                CustomerContactList[i].CUSTOMERID = CustomerID;
                //if (_.isNumber(CustomerContactList[i].COMPANYID))
                CustomerContactList[i].COMPANYID = CompanyID;
            }
        }
        //Processing Customer UID List
        if (typeof CustomerUIDList == "undefined") {
            CustomerUIDList = new Array();
        }
        else {
            for (var i = 0; i < CustomerUIDList.length; i++) {
                //if (_.isNumber(CustomerUIDList[i].CUSTOMERID))
                CustomerUIDList[i].CUSTOMERID = CustomerID;
                //if (_.isNumber(CustomerUIDList[i].COMPANYID))
                CustomerUIDList[i].COMPANYID = CompanyID;
            }
        }
        Customer = {
            CUSTOMERID: CustomerID,
            CUSTOMERCODE: ID_Txt_Customer_Code,
            CUSTOMERNAME: ID_Txt_Customer_Name,
            CUSTOMERADDRESS: ID_Txt_Customer_Address,
            CUSTOMERUID: ID_Txt_Customer_UID,
            CUSTOMERACTIVATION_KEY: ID_Txt_Customer_Activation_Key,
            CUSTOMERLOCATION: ID_Drp_Customer_Location,
            CUSTOMERADDRESSTYPE: ID_Drp_Customer_Address_Type,
            CUSTOMERCONTACTID: 0,
            CUSTOMERCONTACTNUMBER: 0,
            CUSTOMERLINEID: ID_Drp_Customer_Line_Id,
            Status: 'Active',
            CONTACTLIST: CustomerContactList,
            UIDList: CustomerUIDList,
            LOCALCOPY: true
        };
        if (typeof CustomerList == "undefined") {
            CustomerList = new Array();
        } else {
            ConvertCustomerListToStringitems();
        }
        CustomerList.push(Customer);
        console.log(CustomerList);
        Reset_Tab_Advanced();
        BindCustomerListDataTable(CustomerList);
    }
    function CheckBoxValue(ControlID) {
        if ($('#' + ControlID).is(":checked")) {
            return true;
        }
        return false;
    }
    function AddNewCustomer_Contact() {
        ConvertCustomerListToStringitems();
        //Text Box
        var ID_Txt_Customer_Contact_Name = $("#ID_Txt_Customer_Contact_Name").val();
        var ID_Txt_Customer_Contact_Mob = $("#ID_Txt_Customer_Contact_Mob").val();
        var ID_Txt_Customer_Contact_Email = $("#ID_Txt_Customer_Contact_Email").val();
        var ID_Txt_Customer_Contact_Desg = $("#ID_Txt_Customer_Contact_Desg").val();
        var ID_Txt_Customer_Contact_Desc = $("#ID_Txt_Customer_Contact_Desc").val();
        // Checkbox
        var ID_Chk_Customer_Contact_IsPrimary = CheckBoxValue('ID_Chk_Customer_Contact_IsPrimary');

        if (ID_Chk_Customer_Contact_IsPrimary == true) {
            // Filtering content with primary values
            var TempCustomerContactList = _.findWhere(CustomerContactList, {
                CONTACTISPRIMARY: true
            });
            if (typeof TempCustomerContactList != "undefined") {
                if (!($.isEmptyObject(TempCustomerContactList))) {
                    messageText = getMessageDetailsById(39);
                    ValidationPopUp("Control", "Primary Contact");
                    //console.log("Duplicate Primary Contact, Validation error")
                    return;
                }
            }
        }
        CustomerContactItem = {
            CUSTOMERID: CustomerID,
            COMPANYID: CompanyID,
            CONTACTID: _.uniqueId(TempPattern_CustomerContact),
            CONTACTNAME: ID_Txt_Customer_Contact_Name,
            CONTACTMOBILE: ID_Txt_Customer_Contact_Mob,
            CONTACTEMAIL: ID_Txt_Customer_Contact_Email,
            CONTACTDESIG: ID_Txt_Customer_Contact_Desg,
            CONTACTDESC: ID_Txt_Customer_Contact_Desc,
            CONTACTISPRIMARY: ID_Chk_Customer_Contact_IsPrimary,
            Status: 'Active',
            LOCALCOPY: true

        };
        if (typeof CustomerContactList == "undefined") {
            CustomerContactList = new Array();
        }
        CustomerContactList.push(CustomerContactItem);
        console.log(CustomerContactItem);
        BindCustomerContactListDataTable(CustomerContactList);
        Reset_Tab_Advanced_Contact();
    }
    function UpdateNewCustomer_Contact() {
        //Text Box
        var ID_Txt_Customer_Contact_Name = $("#ID_Txt_Customer_Contact_Name").val();
        var ID_Txt_Customer_Contact_Mob = $("#ID_Txt_Customer_Contact_Mob").val();
        var ID_Txt_Customer_Contact_Email = $("#ID_Txt_Customer_Contact_Email").val();
        var ID_Txt_Customer_Contact_Desg = $("#ID_Txt_Customer_Contact_Desg").val();
        var ID_Txt_Customer_Contact_Desc = $("#ID_Txt_Customer_Contact_Desc").val();
        // Checkbox
        var ID_Chk_Customer_Contact_IsPrimary = CheckBoxValue('ID_Chk_Customer_Contact_IsPrimary');
        // Remove item from array then push the updated content
        CustomerContactListFiltered = _.without(CustomerContactList, _.findWhere(CustomerContactList, {
            CONTACTID: CUSTOMERCONTACTID
        }));

        if (ID_Chk_Customer_Contact_IsPrimary == true) {
            // Filtering content with primary values
            var TempCustomerContactList = _.findWhere(CustomerContactListFiltered, {
                CONTACTISPRIMARY: ID_Chk_Customer_Contact_IsPrimary
            });
            if (typeof TempCustomerContactList != "undefined") {
                if (!($.isEmptyObject(TempCustomerContactList))) {
                    messageText = getMessageDetailsById(39);
                    ValidationPopUp("Control", "Primary Contact");
                    //console.log("Duplicate Primary Contact, Validation error")
                    return;
                }
            }
        }
        // Remove item from array then push the updated content
        CustomerContactList = _.without(CustomerContactList, _.findWhere(CustomerContactList, {
            CONTACTID: CUSTOMERCONTACTID
        }));
        CustomerContactItem = {
            CUSTOMERID: CustomerID,
            COMPANYID: CompanyID,
            CONTACTID: CUSTOMERCONTACTID,
            CONTACTNAME: ID_Txt_Customer_Contact_Name,
            CONTACTMOBILE: ID_Txt_Customer_Contact_Mob,
            CONTACTEMAIL: ID_Txt_Customer_Contact_Email,
            CONTACTDESIG: ID_Txt_Customer_Contact_Desg,
            CONTACTDESC: ID_Txt_Customer_Contact_Desc,
            CONTACTISPRIMARY: ID_Chk_Customer_Contact_IsPrimary,
            Status: 'Active',
            LOCALCOPY: true
        };
        if (typeof CustomerContactList == "undefined") {
            CustomerContactList = new Array();
        }
        CustomerContactList.push(CustomerContactItem);
        console.log(CustomerContactItem);
        BindCustomerContactListDataTable(CustomerContactList);
        Reset_Tab_Advanced_Contact();
    }
    function AddNewCompany_Contact() {
        //Text Box
        var ID_Txt_Company_Contact_Name = $("#ID_Txt_Company_Contact_Name").val();
        var ID_Txt_Company_Contact_Mob = $("#ID_Txt_Company_Contact_Mob").val();
        var ID_Txt_Company_Contact_Email = $("#ID_Txt_Company_Contact_Email").val();
        var ID_Txt_Company_Contact_Desg = $("#ID_Txt_Company_Contact_Desg").val();
        var ID_Txt_Company_Contact_Desc = $("#ID_Txt_Company_Contact_Desc").val();
        // Checkbox
        var ID_Chk_Company_Contact_IsPrimary = CheckBoxValue('ID_Chk_Company_Contact_IsPrimary');
        if (ID_Chk_Company_Contact_IsPrimary == true) {
            // Filtering content with primary values
            var TempCompanyContactList = _.findWhere(CompanyContactList, {
                CONTACTISPRIMARY: true
            });
            if (ID_Chk_Company_Contact_IsPrimary == true) {
                if (typeof TempCompanyContactList != "undefined") {
                    if (!($.isEmptyObject(TempCompanyContactList))) {
                        messageText = getMessageDetailsById(39);
                        ValidationPopUp("Control", "Primary Contact");
                        //console.log("Duplicate Primary Contact, Validation error")
                        return;
                    }
                }
            }
        }
        CompanyContactItem = {
            COMPANYID: CompanyID,
            CONTACTID: _.uniqueId(TempPattern_CompanyContact),
            CONTACTNAME: ID_Txt_Company_Contact_Name,
            CONTACTMOBILE: ID_Txt_Company_Contact_Mob,
            CONTACTEMAIL: ID_Txt_Company_Contact_Email,
            CONTACTDESIG: ID_Txt_Company_Contact_Desg,
            CONTACTDESC: ID_Txt_Company_Contact_Desc,
            CONTACTISPRIMARY: ID_Chk_Company_Contact_IsPrimary,
            Status: 'Active'
        };
        if (typeof CompanyContactList == "undefined") {
            CompanyContactList = new Array();
        }
        CompanyContactList.push(CompanyContactItem);
        console.log(CompanyContactItem);
        BindCompanyContactListDataTable(CompanyContactList);
        Reset_Tab_Basic_Contact();
    }
    function UpdateNewCompany_Contact() {
        //Text Box
        var ID_Txt_Company_Contact_Name = $("#ID_Txt_Company_Contact_Name").val();
        var ID_Txt_Company_Contact_Mob = $("#ID_Txt_Company_Contact_Mob").val();
        var ID_Txt_Company_Contact_Email = $("#ID_Txt_Company_Contact_Email").val();
        var ID_Txt_Company_Contact_Desg = $("#ID_Txt_Company_Contact_Desg").val();
        var ID_Txt_Company_Contact_Desc = $("#ID_Txt_Company_Contact_Desc").val();
        // Checkbox
        var ID_Chk_Company_Contact_IsPrimary = CheckBoxValue('ID_Chk_Company_Contact_IsPrimary');
        // Remove item from array then push the updated content
        CompanyContactListFiltered = _.without(CompanyContactList, _.findWhere(CompanyContactList, {
            CONTACTID: COMPANYCONTACTID
        }));

        if (ID_Chk_Company_Contact_IsPrimary == true) {
            // Filtering content with primary values
            var TempCompanyContactList = _.findWhere(CompanyContactListFiltered, {
                CONTACTISPRIMARY: true
            });
            if (typeof TempCompanyContactList != "undefined") {
                if (!($.isEmptyObject(TempCompanyContactList))) {
                    messageText = getMessageDetailsById(39);
                    ValidationPopUp("Control", "Primary Contact");
                    //console.log("Duplicate Primary Contact, Validation error")
                    return;
                }
            }
        }
        //// Remove item from array then push the updated content
        CompanyContactList = _.without(CompanyContactList, _.findWhere(CompanyContactList, {
            CONTACTID: COMPANYCONTACTID
        }));
        CompanyContactItem = {
            COMPANYID: CompanyID,
            CONTACTID: COMPANYCONTACTID,
            CONTACTNAME: ID_Txt_Company_Contact_Name,
            CONTACTMOBILE: ID_Txt_Company_Contact_Mob,
            CONTACTEMAIL: ID_Txt_Company_Contact_Email,
            CONTACTDESIG: ID_Txt_Company_Contact_Desg,
            CONTACTDESC: ID_Txt_Company_Contact_Desc,
            CONTACTISPRIMARY: ID_Chk_Company_Contact_IsPrimary,
            Status: 'Active',
            LOCALCOPY: true
        };
        if (typeof CompanyContactList == "undefined") {
            CompanyContactList = new Array();
        }
        CompanyContactList.push(CompanyContactItem);
        console.log(CompanyContactItem);
        BindCompanyContactListDataTable(CompanyContactList);
        Reset_Tab_Basic_Contact();
    }
    function SaveCompany() {
        //Text Box
        var ID_Txt_Company_Code = $("#ID_Txt_Company_Code").val();
        var ID_Txt_Company_Name = $("#ID_Txt_Company_Name").val();
        var ID_Txt_Company_Address = $("#ID_Txt_Company_Address").val();
        //Select
        var ID_Drp_Company_Location = $("#ID_Drp_Company_Location  option:selected").val();
        var ID_Drp_Company_Address_Type = $("#ID_Drp_Company_Address_Type  option:selected").val();
        CompanyItem = new Array();
        if (typeof CustomerList == "undefined") {
            CustomerList = new Array();
        }
        if (typeof CompanyContactList == "undefined") {
            CompanyContactList = new Array();
        }
        var BasicInfo = {
            COMPANYCODE: ID_Txt_Company_Code,
            COMPANYNAME: ID_Txt_Company_Name,
            COMPANYLOCATION: ID_Drp_Company_Location,
            COMPANYADDRESSTYPE: ID_Drp_Company_Address_Type,
            COMPANYADDRESS: ID_Txt_Company_Address,
            COMPANYCONTACTID: 0,
            CONTACTNUMBER: 0,
            CUSTOMERLIST: CustomerList,
            STATUS: 'Active',
            CONTACTLIST: CompanyContactList
        };
        CompanyItem.push(BasicInfo);
        console.log(CompanyItem);
        var apiPath = "CustomerCreate";
        $.ajax({
            method: "POST",
            url: apiPath,
            data: {
                __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(), LicenseValue: JSON.stringify(BasicInfo)
            },
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (data) {
                if (data.IsStatus) {
                    ShowMessage(data);
                }
                else {
                    Reset();
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function UpdateCompany() {
        //Text Box
        var ID_Txt_Company_Code = $("#ID_Txt_Company_Code").val();
        var ID_Txt_Company_Name = $("#ID_Txt_Company_Name").val();
        var ID_Txt_Company_Address = $("#ID_Txt_Company_Address").val();
        //Select
        var ID_Drp_Company_Location = $("#ID_Drp_Company_Location  option:selected").val();
        var ID_Drp_Company_Address_Type = $("#ID_Drp_Company_Address_Type  option:selected").val();
        CompanyItem = new Array();
        if (typeof CustomerList == "undefined") {
            CustomerList = new Array();
        }
        if (typeof CompanyContactList == "undefined") {
            CompanyContactList = new Array();
        }
        var BasicInfo = {
            COMPANYID: CompanyID,
            COMPANYCODE: ID_Txt_Company_Code,
            COMPANYNAME: ID_Txt_Company_Name,
            COMPANYLOCATION: ID_Drp_Company_Location,
            COMPANYADDRESSTYPE: ID_Drp_Company_Address_Type,
            COMPANYADDRESS: ID_Txt_Company_Address,
            COMPANYCONTACTID: 0,
            CONTACTNUMBER: 0,
            CUSTOMERLIST: CustomerList,
            STATUS: 'Active',
            CONTACTLIST: CompanyContactList
        };
        CompanyItem.push(BasicInfo);
        console.log(CompanyItem);
        var apiPath = "CustomerUpdate";
        $.ajax({
            method: "POST",
            url: apiPath,
            data: {
                __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(), LicenseValue: JSON.stringify(BasicInfo)
            },
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (data) {
                if (data.IsStatus) {
                    ShowMessage(data);
                }
                else {
                    Reset();
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function DeleteCustomerListItem(ID) {
        if (confirm("Are You sure to delete the Customer?")) {
            CustomerID = ID;
            ConvertCustomerListToStringitems();
            // Remove item from array then push the updated content
            CustomerList = _.without(CustomerList, _.findWhere(CustomerList, {
                CUSTOMERID: CustomerID
            }));
            Customer = {
                CUSTOMERID: CustomerID,
                STATUS: 'InActive'
            };
            if (typeof CustomerList == "undefined") {
                CustomerList = new Array();
            }
            CustomerList.push(Customer);
            console.log(CustomerList);
            BindCustomerListDataTable(CustomerList);
        }
    }
    function LoadBasicInfo(CompanyID) {
        Reset_Tab_Basic();
        // Div
        $("#ID_Div_New_Customer").show();
        //Buttons
        $("#ID_Btn_Company_Update").show();
        $("#ID_Btn_Company_Clear").show();
        $("#ID_Btn_Company_Cancel").show();
        $("#ID_Btn_Company_Save").hide();
        //Text Box
        $("#ID_Txt_Company_Code").val("adsas");
        $("#ID_Txt_Company_Name").val("asd");
        $("#ID_Txt_Company_Address").val("asd");
        // Select
        $('#ID_Drp_Company_Location').val("-1");
        $('#ID_Drp_Company_Address_Type').val("-1");
    }
    //function LoadCompaniesList() {
    //    var apiPath = "GetAllCompanies";
    //    $("#ID_Div_DataTable_Companies").html('<table id="ID_DataTable_Companies"  class="displays table-striped table-bordered nowrap cell-border" width="100%" cellspacing="0">' +
    //        '<thead>' +
    //        '<tr><th>Head Code</th> ' +
    //        '<th>Company Name</th>' +
    //        '<th>Company Location</th>' +
    //        '<th>Company Contact Name</th>' +
    //        '<th>Company contact Number</th>' +
    //        //'<th>Edit</th> ' +
    //        '<th>Delete</th> </tr>' +
    //        '</thead> ' +
    //        '<tbody id="ID_DataTable_Companies_Items"></table>');
    //    $.ajax({
    //        url: apiPath,
    //        headers: {
    //            Accept: "application/json;odata=verbose"
    //        },
    //        async: false,
    //        success: function (data) {
    //            var content = '';
    //            var contentall = '';
    //            var items; // Data will have user object
    //            var results;
    //            if (data != null) {
    //                items = data;
    //                if (items != null) {
    //                    results = items;
    //                    CompanyList = results;
    //                    for (var i = 0; i < CompanyList.length; i++) {
    //                        content = '<tr>' +
    //                            '<td><a onclick=UpdateCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >'
    //                            + CompanyList[i].COMPANYHEADCODE + '</a></td>' +
    //                            '<td>' + CompanyList[i].COMPANYNAME + '</td>' +
    //                            '<td>' + CompanyList[i].COMPANYLOCATIONNAME + '</td>' +
    //                            '<td>' + CompanyList[i].COMPANYCONTACTNAME + '</td>' +
    //                            '<td>' + CompanyList[i].COMPNAYCONTACTNUMBER + '</td>' +
    //                            //'<td>' + '<a onclick=UpdateCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
    //                            '<td>' + '<a onclick=DeleteCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>' +
    //                            '</tr>';
    //                        contentall = contentall + content;
    //                        content = '';
    //                    }
    //                    $("#ID_DataTable_Companies_Items").html(contentall);
    //                }
    //            }
    //        },
    //        eror: function (data) {
    //            console.log("An error occurred. Please try again.");
    //        }
    //    });
    //    $("#ID_DataTable_Companies").DataTable({
    //        "columnDefs": [{
    //            "targets": [4],
    //            "visible": false,
    //            "searchable": false
    //        }],
    //        "order": [
    //            [4, "desc"]
    //        ]
    //    });
    //}
    function LoadCompaniesList() {
        debugger;
        var apiPath = "GetAllCompanies";
        $("#ID_Div_DataTable_Companies").html('<table id="ID_DataTable_Companies" class="display" style="width:100%">' +
            '<thead>' +
            '<tr><th>Head Code</th> ' +
            '<th>Company Name</th>' +
            '<th>Company Location</th>' +
            '<th>Company Contact Name</th>' +
            '<th>Company contact Number</th>' +
            //'<th>Edit</th> ' +
            //'<th>Delete</th> </tr>' +
            '</thead> ' +
            '<tbody id="ID_DataTable_Companies_Items"></table>');
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (data) {
                var content = '';
                var contentall = '';
                var items; // Data will have user object
                var results;
                if (data != null) {
                    items = data;
                    if (items != null) {
                        results = items;
                        CompanyList = results;
                        for (var i = 0; i < CompanyList.length; i++) {
                            content = '<tr>' +
                                '<td><a onclick=UpdateCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >'
                                + CompanyList[i].COMPANYHEADCODE + '</a></td>' +
                                '<td>' + CompanyList[i].COMPANYNAME + '</td>' +
                                '<td>' + CompanyList[i].COMPANYLOCATIONNAME + '</td>' +
                                '<td>' + CompanyList[i].COMPANYCONTACTNAME + '</td>' +
                                '<td>' + CompanyList[i].COMPNAYCONTACTNUMBER + '</td>' +
                                //'<td>' + '<a onclick=UpdateCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
                                //'<td>' + '<a onclick=DeleteCompanyListItem(' + CompanyList[i].COMPANYID + '); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>' +
                                '</tr>';
                            contentall = contentall + content;
                            content = '';
                        }
                        $("#ID_DataTable_Companies_Items").html(contentall);
                    }
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
        $("#ID_DataTable_Companies").DataTable({
            "columnDefs": [{
                "targets": [4],
                "visible": false,
                "searchable": false
            }],
            "order": [
                [4, "desc"]
            ]
        });
    }
    function LoadCustomerList(CompanyID) {
        var apiPath = "GetAllCustomers?CompanyID=" + CompanyID;
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (data) {
                if (data != null) {
                    results = data;
                    CustomerList = data;
                    BindCustomerListDataTable(CustomerList);
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    // Binding Company Contacts
    function GetAllCompanyContacts(ID) {
        CompanyID = ID;
        var apiPath = "GetCompanyAllContactInfoById?CompanyID=" + ID;
        // Call Ajax
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (Data) {
                CompanyContactList = Data;
                BindCompanyContactListDataTable(Data);
            },
            eror: function (Data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function BindCompanyContactListDataTable(Data) {
        // Remove item from array then push the updated content
        Data = _.filter(Data, function (item) { return item.STATUS != 'InActive'; })


        $("#ID_Div_DataTable_Company_Contacts").html("");
        $("#ID_Div_DataTable_Company_Contacts").html('<table id="ID_DataTable_Company_Contacts"  class="displays table-striped table-bordered nowrap cell-border" width="100%" cellspacing="0">' +
            '<thead>' +
            '<tr><th>Name</th> ' +
            '<th>Mobile Number</th>' +
            '<th>Email ID</th>' +
            '<th>Designation</th>' +
            '<th>Is Primary</th>' +
            '<th>Edit</th> ' +
            '<th>Delete</th> </tr>' +
            '</thead> ' +
            '<tbody id="ID_DataTable_Company_Contacts_Items"></table>');
        var content = '';
        var contentall = '';
        if (Data != null) {
            //CustomerList = Data;
            for (var i = 0; i < Data.length; i++) {
                content = '<tr>' +
                    '<td>' + Data[i].CONTACTNAME + '</td>' +
                    '<td>' + Data[i].CONTACTMOBILE + '</td>' +
                    '<td>' + Data[i].CONTACTEMAIL + '</td>' +
                    '<td>' + Data[i].CONTACTDESIG + '</td>' +
                    '<td>' + Data[i].CONTACTISPRIMARY + '</td>';
                if (JSON.stringify(Data[i].CONTACTID).indexOf(TempPattern_CompanyContact) != -1) {
                    content += '<td>' + 'NA' + '</td>' +
                        '<td>' + '<a onclick=CompanyContactListItemDelete("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                } else {
                    content += '<td>' + '<a onclick=CompanyContactListItemUpdate("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
                        '<td>' + '<a onclick=CompanyContactListItemDelete("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                }
                content += '</tr>';
                contentall = contentall + content;
                content = '';
            }
            $("#ID_DataTable_Company_Contacts_Items").html(contentall);
        }
        $("#ID_DataTable_Company_Contacts").DataTable();
        $("#ID_DataTable_Company_Contacts").show();
        $("#ID_Div_DataTable_Company_Contacts").show();
        $("#ID_Div_DataTable_Company_Contact_Full").show();
    }
    function CompanyContactListItemDelete(ID) {
        if (confirm("Are You sure to delete the Contact?")) {
            COMPANYCONTACTID = ID;
            // Remove item from array then push the updated content
            CompanyContactList = _.without(CompanyContactList, _.findWhere(CompanyContactList, {
                CONTACTID: COMPANYCONTACTID
            }));
            CompanyContactItem = {
                CONTACTID: COMPANYCONTACTID,
                COMPANYID: CompanyID,
                STATUS: 'InActive',
                LOCALCOPY: true
            };
            if (typeof CompanyContactList == "undefined") {
                CompanyContactList = new Array();
            }
            CompanyContactList.push(CompanyContactItem);
            console.log(CompanyContactList);
            BindCompanyContactListDataTable(CompanyContactList);
        }
    }
    function CompanyContactListItemUpdate(ID) {
        //Need work End Point and SQL
        COMPANYCONTACTID = ID;
        var templist = _.findWhere(CompanyContactList, {
            CONTACTID: COMPANYCONTACTID, LOCALCOPY: true
        });
        if (typeof templist != "undefined") {
            templistarray = new Array();
            templistarray.push(templist);
            BindCompanyContactListItem(ID, templistarray);
        }
        else {
            var apiPath = "GetCompanyContactInfoById?CompanyID=" + CompanyID + "&ContactID=" + ID;
            // Call Ajax
            $.ajax({
                url: apiPath,
                headers: {
                    Accept: "application/json;odata=verbose"
                },
                async: false,
                success: function (Data) {
                    BindCompanyContactListItem(ID, Data);
                },
                eror: function (Data) {
                    console.log("An error occurred. Please try again.");
                }
            });
        }
    }
    function BindCompanyContactListItem(ID, Data) {
        // Loading Div and other controls
        New_Tab_Basic_Contact_Update();
        for (var i = 0; i < Data.length; i++) {
            $("#ID_Txt_Company_Contact_Name").val(Data[i].CONTACTNAME);
            $("#ID_Txt_Company_Contact_Mob").val(Data[i].CONTACTMOBILE);
            $("#ID_Txt_Company_Contact_Email").val(Data[i].CONTACTEMAIL);
            $("#ID_Txt_Company_Contact_Desg").val(Data[i].CONTACTDESIG);
            $("#ID_Txt_Company_Contact_Desc").val(Data[i].CONTACTDESC);
            // Checkout
            if (Data[i].CONTACTISPRIMARY == true)
                $('#ID_Chk_Company_Contact_IsPrimary').prop('checked', true);
            else if (Data[i].CONTACTISPRIMARY == false)
                $('#ID_Chk_Company_Contact_IsPrimary').prop('checked', false);
        }
    }
    // Binding Customer Contacts
    function GetAllCustomerContacts(ID) {
        CustomerID = ID;
        var apiPath = "GetCustomerAllContactInfoById?CompanyID=" + CompanyID + "&CustomerID=" + ID;
        // Call Ajax
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: false,
            success: function (Data) {
                BindCustomerContactListDataTable(Data);
            },
            eror: function (Data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function BindCustomerContactListDataTable(Data) {
        CustomerContactList = Data;
        // Remove item from array then push the updated content
        Data = _.filter(Data, function (item) { return item.STATUS != 'InActive'; })

        $("#ID_Div_DataTable_Customers_Contacts").html("");
        $("#ID_Div_DataTable_Customers_Contacts").html('<table id="ID_DataTable_Customers_Contacts"  class="displays table-striped table-bordered nowrap cell-border" width="100%" cellspacing="0">' +
            '<thead>' +
            '<tr><th>Name</th> ' +
            '<th>Mobile Number</th>' +
            '<th>Email ID</th>' +
            '<th>Designation</th>' +
            '<th>Is Primary</th>' +
            '<th>Edit</th> ' +
            '<th>Delete</th> </tr>' +
            '</thead> ' +
            '<tbody id="ID_DataTable_Customers_Contacts_Items"></table>');
        var content = '';
        var contentall = '';
        if (Data != null) {
            //CustomerList = Data;
            for (var i = 0; i < Data.length; i++) {
                content = '<tr>' +
                    '<td>' + Data[i].CONTACTNAME + '</td>' +
                    '<td>' + Data[i].CONTACTMOBILE + '</td>' +
                    '<td>' + Data[i].CONTACTEMAIL + '</td>' +
                    '<td>' + Data[i].CONTACTDESIG + '</td>' +
                    '<td>' + Data[i].CONTACTISPRIMARY + '</td>';
                if (JSON.stringify(Data[i].CONTACTID).indexOf(TempPattern_CustomerContact) != -1) {
                    content += '<td>' + 'NA' + '</td>' +
                        '<td>' + '<a onclick=CustomerContactListItemDelete("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                } else {
                    content += '<td>' + '<a onclick=CustomerContactListItemUpdate("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
                        '<td>' + '<a onclick=CustomerContactListItemDelete("' + Data[i].CONTACTID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                }
                content += '</tr>';
                contentall = contentall + content;
                content = '';
            }
            $("#ID_DataTable_Customers_Contacts_Items").html(contentall);
        }
        $("#ID_DataTable_Customers_Contacts").DataTable({
            "order": [
                [0, "desc"]
            ]
        });
        $("#ID_DataTable_Customers_Contacts").show();
        $("#ID_Div_DataTable_Customers_Contacts").show();
        $("#ID_Div_Customer_Contact_DataTable_Full").show();
        $("#ID_Div_Customer_Contact_Full").show();

    }
    function CustomerContactListItemDelete(ID) {
        if (confirm("Are You sure to delete the Contact?")) {
            var CUSTOMERCONTACTID = ID;
            CustomerContactItem_old = _.findWhere(CustomerContactList, {
                CONTACTID: CUSTOMERCONTACTID
            });
            // Remove item from array then push the updated content
            CustomerContactList = _.without(CustomerContactList, _.findWhere(CustomerContactList, {
                CONTACTID: CUSTOMERCONTACTID
            }));

            CustomerContactItem = {
                CONTACTID: CUSTOMERCONTACTID,
                CUSTOMERID: CustomerContactItem_old.CUSTOMERID,
                COMPANYID: CustomerContactItem_old.COMPANYID,
                STATUS: 'InActive',
                LOCALCOPY: true

            };
            if (typeof CustomerContactList == "undefined") {
                CustomerContactList = new Array();
            }
            CustomerContactList.push(CustomerContactItem);
            console.log(CustomerContactList);
            BindCustomerContactListDataTable(CustomerContactList);
        }
    }
    function CustomerContactListItemUpdate(ID) {
        //Need work End Point and SQL
        CUSTOMERCONTACTID = ID;
        var templist = _.findWhere(CustomerContactList, {
            CONTACTID: CUSTOMERCONTACTID, LOCALCOPY: true
        });
        if (typeof templist != "undefined") {
            templistarray = new Array();
            templistarray.push(templist);
            BindCustomerContactListItem(ID, templistarray);
        }
        else {
            var apiPath = "GetCustomerContactInfoById?CompanyID=" + CompanyID + "&CustomerID=" + CustomerID + "&ContactID=" + ID;
            // Call Ajax
            $.ajax({
                url: apiPath,
                headers: {
                    Accept: "application/json;odata=verbose"
                },
                async: false,
                success: function (Data) {
                    BindCustomerContactListItem(ID, Data);
                },
                eror: function (Data) {
                    console.log("An error occurred. Please try again.");
                }
            });
        }
    }
    function BindCustomerContactListItem(ID, Data) {
        // Loading Div and other controls
        New_Tab_Advanced_Contact_Update();
        debugger;
        for (var i = 0; i < Data.length; i++) {
            $("#ID_Txt_Customer_Contact_Name").val(Data[i].CONTACTNAME);
            $("#ID_Txt_Customer_Contact_Mob").val(Data[i].CONTACTMOBILE);
            $("#ID_Txt_Customer_Contact_Email").val(Data[i].CONTACTEMAIL);
            $("#ID_Txt_Customer_Contact_Desg").val(Data[i].CONTACTDESIG);
            $("#ID_Txt_Customer_Contact_Desc").val(Data[i].CONTACTDESC);
            // Checkout
            if (Data[i].CONTACTISPRIMARY == true)
                $('#ID_Chk_Customer_Contact_IsPrimary').prop('checked', true);
            else if (Data[i].CONTACTISPRIMARY == false)
                $('#ID_Chk_Customer_Contact_IsPrimary').prop('checked', false);
        }
    }
    // Binding Customer List
    function BindCustomerListDataTable(Data) {
        // Remove item from array then push the updated content
        Data = _.filter(Data, function (item) { return item.STATUS != 'InActive'; })


        $("#ID_Div_DataTable_Customers").html('<table id="ID_DataTable_Customers"  class="displays table-striped table-bordered nowrap cell-border" width="100%" cellspacing="0">' +
            '<thead>' +
            '<tr><th>Customer Code</th> ' +
            '<th>Customer Name</th>' +
            '<th>Location Name</th>' +
            '<th>Contact Name</th>' +
            '<th>Mobile Number</th>' +
            //'<th>UID</th>' +
            //'<th>Line Id</th>' +
            '<th>Edit</th> ' +
            '<th>Delete</th> </tr>' +
            '</thead> ' +
            '<tbody id="ID_DataTable_Customers_Items"></table>');
        var content = '';
        var contentall = '';
        if (Data != null) {
            //CustomerList = Data;
            for (var i = 0; i < Data.length; i++) {
                content = '<tr>' +
                    '<td>' + Data[i].CUSTOMERCODE + '</td>' +
                    '<td>' + Data[i].CUSTOMERNAME + '</td>' +
                    '<td>' + Data[i].CUSTOMERLOCATIONNAME + '</td>' +
                    '<td>' + Data[i].CUSTOMERCONTACTNAME + '</td>' +
                    '<td>' + Data[i].CUSTOMERNUMBER + '</td>';
                //'<td>' + Data[i].CUSTOMERUID + '</td>' +
                //'<td>' + Data[i].CUSTOMERLINEIDNAME + '</td>';
                if (Data[i].CUSTOMERID == "0") {
                    content += '<td>' + 'NA' + '</td>' +
                        '<td>' + '<a onclick=DeleteCustomerListItem("' + Data[i].CUSTOMERID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                } else {
                    content += '<td>' + '<a onclick=UpdateCustomerListItem("' + Data[i].CUSTOMERID + '"); class="CLS_DT_MODULE_ITEM_EDIT CLS_DT_MODULE_ITEM" >Edit</a>' + '</td>' +
                        '<td>' + '<a onclick=DeleteCustomerListItem("' + Data[i].CUSTOMERID + '"); class="CLS_DT_MODULE_ITEM_DELETE CLS_DT_MODULE_ITEM" >Delete</a>' + '</td>';
                }
                content += '</tr>';
                contentall = contentall + content;
                content = '';
            }
            $("#ID_DataTable_Customers_Items").html(contentall);
        }
        $("#ID_DataTable_Customers").DataTable({
            "order": [
                [0, "desc"]
            ]
        });
        $("#ID_Div_DataTable_Customers").show();
        $("#ID_Div_Customer_DataTable_Full").show();
    }
    // New Code
    // Reusable functions
    // Binding DropDown based on Ajax
    function BindDropDownswithAPI(ControlId, APIPath, Id, Title, DefaultText = "Please Select", DefaultValue = "-1", IsAsync = false) {
        var apiPath = APIPath;
        var content = "<option selected=" + DefaultValue + ">" + DefaultText + "</option>";
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: IsAsync,
            success: function (data) {
                if (typeof data != "undefined") {
                    if (data != null) {
                        results = data;
                        for (var i = 0; i < results.length; i++) {
                            content += "<option value=" + results[i][Id] + ">" + results[i][Title] + "</option>";
                        }
                    }
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
        $('#' + ControlId).html(content);
    }
    // Binding Data Table using API end point, no need to mention column names (Auto detection enabled)
    function BindDataTablewithAPI(ControlId, APIPath, IsAsync = false) {
        var apiPath = APIPath;
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: IsAsync,
            success: function (data) {
                if (typeof data != "undefined") {
                    if (data != null) {
                        BindDataTablewithData(ControlId, data);
                    }
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    //Binding Data Table using Data and control id , No need to mention columns (Auto detection is enabled)
    function BindDataTablewithData(ControlId, data) {
        $('#' + ControlId).removeAttr('class').attr('class', '');
        $("#" + ControlId).html("");
        var my_columns = [];
        var SingleRow = data[0];
        $.each(SingleRow, function (key, value) {
            var my_item = {};
            my_item.data = key;
            my_item.title = key;
            my_columns.push(my_item);
        });
        if (typeof my_columns != "undefined") {
            if (my_columns != null) {
                if (typeof data != "undefined") {
                    if (data != null) {
                        $('#' + ControlId).DataTable({
                            data: data,
                            "columns": my_columns
                        });
                        $('#' + ControlId).show();
                        return true;
                    }
                }
            }
        }
        console.log("An error occurred. BindDataTablewithData()");
    }
    // Binding Data Table using API end point, no need to mention column names (Auto detection enabled)
    function GetDataFromAPI(ControlId, APIPath, IsAsync = false) {
        var apiPath = APIPath;
        $.ajax({
            url: apiPath,
            headers: {
                Accept: "application/json;odata=verbose"
            },
            async: IsAsync,
            success: function (data) {
                if (typeof data != "undefined") {
                    if (data != null) {
                        BindData(ControlId, data);
                    }
                }
            },
            eror: function (data) {
                console.log("An error occurred. Please try again.");
            }
        });
    }
    function BindData(ControlId, data) {
        if (typeof data != "undefined") {
            if (data != null) {
                if (ControlId == "ID_Btn_Customer_Activation_Key") {
                    $("#ID_Txt_Customer_Activation_Key").val(data);
                }
            }
        }
    }
</script>
